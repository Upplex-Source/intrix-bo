openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/v1/carts/add:
    post:
      summary: '1. Add to cart'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Cart API'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_code:
                  type: string
                  description: 'The product_code of the prodcut.'
                  example: 5-IN-1
                color:
                  type: required
                  description: 'strong The color of the product.'
                  example: CHROME
                quantity:
                  type: required
                  description: 'integer The quantity of the product.'
                  example: '1'
                session_key:
                  type: string
                  description: 'The session_key of the cart. Required only on second time'
                  example: kn1i23onlas1
                promo_code:
                  type: integer
                  description: 'The ID of the promotion/voucher to apply.'
                  example: 0
              required:
                - product_code
      security: []
  /api/v1/carts/update:
    post:
      summary: '3. Update cart'
      description: '<aside class="notice">session_key or cart id can be used to update the cart</aside>'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Cart API'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_code:
                  type: string
                  description: 'The product_code of the prodcut.'
                  example: 5-IN-1
                color:
                  type: required
                  description: 'strong The color of the product.'
                  example: CHROME
                quantity:
                  type: required
                  description: 'integer The quantity of the product.'
                  example: '1'
                session_key:
                  type: string
                  description: 'The session_key of the cart. Required only on second time'
                  example: kn1i23onlas1
                id:
                  type: integer
                  description: 'The ID of the cart.'
                  example: 1
                cart_item:
                  type: integer
                  description: 'The ID of the cart item.'
                  example: 1
                promo_code:
                  type: integer
                  description: 'The ID of the promotion/voucher to apply.'
                  example: 0
              required:
                - product_code
      security: []
  /api/v1/carts:
    get:
      summary: '2. Retrieve cart'
      description: '<aside class="notice">id and session_key can be used to filter out the cart</aside>'
      parameters:
        -
          in: query
          name: session_key
          description: 'The unique identifier for the cart.'
          example: abcd-1234
          required: false
          schema:
            type: string
            description: 'The unique identifier for the cart.'
            example: abcd-1234
        -
          in: query
          name: id
          description: 'The ID of the cart. .'
          example: abcd-1234
          required: false
          schema:
            type: string
            description: 'The ID of the cart. .'
            example: abcd-1234
        -
          in: query
          name: per_page
          description: 'Retrieve how many insurance quote in a page, default is 10.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'Retrieve how many insurance quote in a page, default is 10.'
            example: 10
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    id:
                      - 'The selected id is invalid.'
                    session_key:
                      - 'The selected session key is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    type: object
                    example:
                      id:
                        - 'The selected id is invalid.'
                      session_key:
                        - 'The selected session key is invalid.'
      tags:
        - 'Cart API'
      security: []
  /api/v1/carts/delete:
    post:
      summary: '4. Delete Cart'
      description: '<aside class="notice">session_key or cart id can be used to delete the cart</aside>'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Cart API'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                session_key:
                  type: string
                  description: 'The unique identifier for the cart.'
                  example: abcd-1234
                id:
                  type: integer
                  description: 'The ID of the cart.'
                  example: 1
      security: []
  /api/v1/carts/delete-cart-item:
    post:
      summary: '4. Delete Cart Item'
      description: '<aside class="notice">session_key or cart id can be used to delete the cart</aside>'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Cart API'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                session_key:
                  type: string
                  description: 'The session_key of the cart. Required only on second time'
                  example: kn1i23onlas1
                id:
                  type: integer
                  description: 'The ID of the cart.'
                  example: 1
                cart_item:
                  type: integer
                  description: 'The ID of the cart item.'
                  example: 1
      security: []
  /api/v1/orders:
    get:
      summary: '3. Retrieve user order'
      description: "<aside class=\"notice\">id and reference can be used to filter out the order</aside>\n\n<strong>status</strong><br>\n1: placed order / pending payment<br>\n3: paid / unclaimed<br>\n10: completed / claimed<br>\n20: canceled<br>"
      parameters:
        -
          in: query
          name: reference
          description: 'The unique reference for the order.'
          example: abcd-1234
          required: false
          schema:
            type: string
            description: 'The unique reference for the order.'
            example: abcd-1234
        -
          in: query
          name: id
          description: 'The ID of the order. .'
          example: 1
          required: false
          schema:
            type: integer
            description: 'The ID of the order. .'
            example: 1
        -
          in: query
          name: status
          description: 'The Status of the order. .'
          example: 1
          required: false
          schema:
            type: integer
            description: 'The Status of the order. .'
            example: 1
        -
          in: query
          name: per_page
          description: 'Retrieve how many insurance quote in a page, default is 10.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'Retrieve how many insurance quote in a page, default is 10.'
            example: 10
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    id:
                      - 'The selected id is invalid.'
                    reference:
                      - 'The selected reference is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    type: object
                    example:
                      id:
                        - 'The selected id is invalid.'
                      reference:
                        - 'The selected reference is invalid.'
      tags:
        - 'Order API'
      security: []
  /api/v1/orders/retry-payment:
    post:
      summary: '4. Retry Payment'
      description: '<aside class="notice">retry payment for online payment</aside>'
      parameters:
        -
          in: query
          name: order_id
          description: 'The ID of the order.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'The ID of the order.'
            example: 1
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Order API'
      security: []
  /api/v1/orders/cart-checkout:
    post:
      summary: '1. checkout'
      description: '<strong>payment_method</strong><br>'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Order API'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                session_key:
                  type: string
                  description: 'The session_key of the cart.'
                  example: kn1i23onlas1
                cart_item:
                  type: integer
                  description: 'The ID of the cart item.'
                  example: 12
                promo_code:
                  type: integer
                  description: 'The ID of the promotion/voucher to apply.'
                  example: 0
                fullname:
                  type: string
                  description: 'The fullname of the guest.'
                  example: Johnny
                company_name:
                  type: string
                  description: 'nullable The company_name of the guest.'
                  example: 'Johnny holdings'
                email:
                  type: string
                  description: 'The email of the guest.'
                  example: johnny@gmail.com
                phone_number:
                  type: string
                  description: 'nullable The phone_number of the guest.'
                  example: '1231231223'
                address_1:
                  type: string
                  description: 'The address_1 of the guest.'
                  example: 'Lot 4, 1'
                address_2:
                  type: string
                  description: 'nullable The address_2 of the guest.'
                  example: 'Bandar Baru Bangi'
                city:
                  type: string
                  description: 'The city of the guest.'
                  example: Kajang
                state:
                  type: string
                  description: 'The state of the guest.'
                  example: Selangor
                postcode:
                  type: string
                  description: 'The postcode of the guest.'
                  example: '43000'
                country:
                  type: string
                  description: 'The country of the guest.'
                  example: Malaysia
                remarks:
                  type: string
                  description: 'nullable The remarks for the order.'
                  example: 'Be careful'
              required:
                - cart_item
                - fullname
                - email
                - address_1
                - city
                - state
                - postcode
                - country
      security: []
  /api/v1/orders/direct-checkout:
    post:
      summary: '2. checkout'
      description: '<strong>payment_method</strong><br>'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Order API'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_code:
                  type: string
                  description: 'The product_code of the prodcut.'
                  example: 5-IN-1
                color:
                  type: required
                  description: 'strong The color of the product.'
                  example: CHROME
                quantity:
                  type: required
                  description: 'integer The quantity of the product.'
                  example: '1'
                promo_code:
                  type: integer
                  description: 'The ID of the promotion/voucher to apply.'
                  example: 0
                fullname:
                  type: string
                  description: 'nullable The fullname of the guest.'
                  example: Johnny
                company_name:
                  type: string
                  description: 'nullable The company_name of the guest.'
                  example: 'Johnny holdings'
                email:
                  type: string
                  description: 'nullable The email of the guest.'
                  example: johnny@gmail.com
                phone_number:
                  type: string
                  description: 'nullable The phone_number of the guest.'
                  example: '1231231223'
                address_1:
                  type: string
                  description: 'nullable The address_1 of the guest.'
                  example: 'Lot 4, 1'
                address_2:
                  type: string
                  description: 'nullable The address_2 of the guest.'
                  example: 'Bandar Baru Bangi'
                city:
                  type: string
                  description: 'nullable The city of the guest.'
                  example: Kajang
                state:
                  type: string
                  description: 'nullable The state of the guest.'
                  example: Selangor
                postcode:
                  type: string
                  description: 'nullable The postcode of the guest.'
                  example: '43000'
                country:
                  type: string
                  description: 'nullable The country of the guest.'
                  example: Malaysia
                remarks:
                  type: string
                  description: 'nullable The remarks for the order.'
                  example: 'Be careful'
              required:
                - product_code
      security: []
  /api/v1/promo-codes:
    get:
      summary: '1. Get promo code'
      description: "<aside class=\"notice\">Get all voucher that is claimable</aside>\n\n<strong>voucher discount type</strong></br>\n1: percentage<br>\n2: fixed amount<br>\n3: buy x free y<br>"
      parameters:
        -
          in: query
          name: per_page
          description: 'Retrieve how many product in a page, default is 10.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'Retrieve how many product in a page, default is 10.'
            example: 10
        -
          in: query
          name: promo_code
          description: 'The promo code to be filter.'
          example: XBMSD22
          required: false
          schema:
            type: string
            description: 'The promo code to be filter.'
            example: XBMSD22
        -
          in: query
          name: discount_type
          description: 'The promo discount type to be filter'
          example: 2
          required: false
          schema:
            type: integer
            description: 'The promo discount type to be filter'
            example: 2
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: ''
                  message_key: get_voucher_success
                  data: []
                properties:
                  message:
                    type: string
                    example: ''
                  message_key:
                    type: string
                    example: get_voucher_success
                  data:
                    type: array
                    example: []
      tags:
        - 'Promo Code API'
tags:
  -
    name: 'Cart API'
    description: ''
  -
    name: 'Order API'
    description: ''
  -
    name: 'Promo Code API'
    description: ''
